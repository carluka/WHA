Index: src/main/java/si/feri/um/wha/controllers/NarociloController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package si.feri.um.wha.controllers;\n\nimport org.springframework.http.ResponseEntity;\nimport si.feri.um.wha.dao.NarociloRepository;\nimport si.feri.um.wha.models.Artikel;\nimport si.feri.um.wha.models.Narocilo;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.web.bind.annotation.*;\nimport si.feri.um.wha.models.Zaposleni;\n\nimport java.util.*;\n\nimport java.time.DayOfWeek;\nimport java.time.LocalDateTime;\nimport java.time.LocalDate;\nimport java.time.format.TextStyle;\nimport java.util.Locale;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\n@RestController\n@CrossOrigin\n@RequestMapping(\"/narocila\")\npublic class NarociloController {\n\n    @Autowired\n    private NarociloRepository narociloDao;\n\n    @GetMapping\n    public Iterable<Narocilo> vrniNarocilo(){\n        return narociloDao.findAll();\n    }\n\n    @GetMapping(\"/TODO\")\n    public List<Narocilo> getTodoNarocila() {\n        return narociloDao.findAllTodoNarocila();\n    }\n\n    @GetMapping(\"/{ID_narocilo}\")\n    public Narocilo vrniDolocenoNarocilo(@PathVariable(name = \"ID_narocilo\") Long ID_narocilo){\n        return narociloDao.vrniDolocenoNarocilo(ID_narocilo);\n    }\n\n\n    @GetMapping(\"/st_teden1\")\n    public ResponseEntity<Map<String, Integer>> getNumberOfOrdersForFirstWeek() {\n        // Define your start and end dates for the week you want to analyze\n        LocalDate startOfWeek = LocalDate.now().with(DayOfWeek.MONDAY);\n        // Adjust the end date to be Friday, not Sunday\n        LocalDateTime startDateTime = startOfWeek.atStartOfDay();\n        LocalDateTime endDateTime = startOfWeek.with(DayOfWeek.FRIDAY).atTime(23, 59, 59);\n\n        // Fetch your orders based on the dates\n        List<Narocilo> orders = narociloDao.findNarocilaBetweenDates(startDateTime, endDateTime);\n\n        // Calculate the number of orders per day\n        Map<String, Integer> ordersPerDay = new LinkedHashMap<>(); // Use LinkedHashMap to maintain insertion order\n        LocalDate date = startOfWeek;\n        while (!date.isAfter(endDateTime.toLocalDate())) {\n            final LocalDateTime finalStartOfDay = date.atStartOfDay();\n            final LocalDateTime finalEndOfDay = date.atTime(23, 59, 59);\n            int dayOrders = (int) orders.stream()\n                    .filter(narocilo -> !narocilo.getDatumVnosa().isBefore(finalStartOfDay) &&\n                            !narocilo.getDatumVnosa().isAfter(finalEndOfDay))\n                    .count();\n            ordersPerDay.put(date.getDayOfWeek().getDisplayName(TextStyle.SHORT, Locale.getDefault()), dayOrders);\n            date = date.plusDays(1); // Move to the next day\n        }\n\n        // Return the map in the response entity\n        return ResponseEntity.ok(ordersPerDay);\n    }\n\n\n\n    @GetMapping(\"/st_teden2\")\n    public ResponseEntity<Map<String, Integer>> getNumberOfOrdersForSecondWeek() {\n        // Define your start and end dates for the week you want to analyze\n        LocalDate startOfWeek = LocalDate.now().minusWeeks(1).with(DayOfWeek.MONDAY);\n        // Adjust the end date to be Friday, not Sunday\n        LocalDateTime startDateTime = startOfWeek.atStartOfDay();\n        LocalDateTime endDateTime = startOfWeek.with(DayOfWeek.FRIDAY).atTime(23, 59, 59);\n\n        // Fetch your orders based on the dates\n        List<Narocilo> orders = narociloDao.findNarocilaBetweenDates(startDateTime, endDateTime);\n\n        // Calculate the number of orders per day\n        Map<String, Integer> ordersPerDay = new LinkedHashMap<>(); // Use LinkedHashMap to maintain insertion order\n        LocalDate date = startOfWeek;\n        while (!date.isAfter(endDateTime.toLocalDate())) {\n            final LocalDateTime finalStartOfDay = date.atStartOfDay();\n            final LocalDateTime finalEndOfDay = date.atTime(23, 59, 59);\n            int dayOrders = (int) orders.stream()\n                    .filter(narocilo -> !narocilo.getDatumVnosa().isBefore(finalStartOfDay) &&\n                            !narocilo.getDatumVnosa().isAfter(finalEndOfDay))\n                    .count();\n            ordersPerDay.put(date.getDayOfWeek().getDisplayName(TextStyle.SHORT, Locale.getDefault()), dayOrders);\n            date = date.plusDays(1); // Move to the next day\n        }\n\n        // Return the map in the response entity\n        return ResponseEntity.ok(ordersPerDay);\n    }\n\n\n\n    @GetMapping(\"/tedensko/skupaj\")\n    public ResponseEntity<Double> getTedenSkupaj() {\n        LocalDate today = LocalDate.now();\n        LocalDateTime startOfWeek = today.with(DayOfWeek.MONDAY).atStartOfDay();\n        LocalDateTime endOfToday = today.atTime(23, 59, 59);\n\n        List<Narocilo> weeklyOrders = narociloDao.findNarocilaBetweenDates(startOfWeek, endOfToday);\n\n        double total = weeklyOrders.stream()\n                .mapToDouble(Narocilo::getCenaSkupaj) // Predpostavljam, da Narocilo ima metodo getCenaSkupaj\n                .sum();\n\n        return ResponseEntity.ok(total);\n    }\n\n\n    @GetMapping(\"/tedensko\")\n    public ResponseEntity<Map<String, Double>> getWeeklyIncome() {\n        LocalDate today = LocalDate.now();\n        LocalDateTime startOfWeek = today.with(DayOfWeek.MONDAY).atStartOfDay();\n        LocalDateTime endOfToday = today.atTime(23, 59, 59);\n\n        List<Narocilo> weeklyOrders = narociloDao.findNarocilaBetweenDates(startOfWeek, endOfToday);\n\n        Map<String, Double> weeklyIncome = new LinkedHashMap<>(); // Uporabite LinkedHashMap za ohranjanje vrstnega reda\n        for (LocalDate date = startOfWeek.toLocalDate(); !date.isAfter(today); date = date.plusDays(1)) {\n            final LocalDate finalDate = date; // Končna spremenljivka za uporabo v lambda izrazu\n            final DayOfWeek day = finalDate.getDayOfWeek();\n            double dailyTotal = weeklyOrders.stream()\n                    .filter(narocilo -> narocilo.getDatumVnosa().toLocalDate().equals(finalDate))\n                    .mapToDouble(Narocilo::getCenaSkupaj)\n                    .sum();\n            weeklyIncome.put(day.getDisplayName(TextStyle.SHORT, Locale.getDefault()), dailyTotal);\n        }\n\n        System.out.println(weeklyIncome);\n        return ResponseEntity.ok(weeklyIncome);\n    }\n\n\n\n\n\n\n    @PostMapping\n    public Narocilo dodajNarocilo(@RequestBody Narocilo narocilo){\n        ArrayList<Integer> artikli = narocilo.getArtikli();\n        ArrayList<Integer> kolicine = narocilo.getSeznamKolicin();\n        for(int i = 0; i<artikli.size();i++){\n            int trenutniArtikel;\n        }\n        return narociloDao.save(narocilo);\n    }\n\n    @DeleteMapping(\"/izbrisi/{ID_narocilo}\")\n    public ResponseEntity<String> izbrisiNarocilo(@PathVariable(name = \"ID_narocilo\") Long ID_narocilo) throws Exception {\n        narociloDao.deleteById(ID_narocilo);\n        return ResponseEntity.ok(\"Uspesno izbrisano narocilo.\");\n    }\n\n    @PostMapping(\"/dodaj\")\n    public ResponseEntity<String> dodajNarocila(@RequestBody List<Narocilo> narocila) {\n        Iterable<Narocilo> savedNarocila = narociloDao.saveAll(narocila);\n        return ResponseEntity.ok(\"Uspesno dodana naročila.\");\n    }\n\n    @PutMapping(\"/posodobi/{ID_narocilo}\")\n    public ResponseEntity<String> posodobiNarocilo(@PathVariable(name = \"ID_narocilo\") Long ID_narocilo, @RequestBody Narocilo updatedNarocilo) {\n        Narocilo existingNarocilo = narociloDao.vrniDolocenoNarocilo(ID_narocilo);\n\n        if (existingNarocilo == null) {\n            return ResponseEntity.notFound().build();\n        }\n\n        if (updatedNarocilo.getCenaSkupaj() != 0.0) {\n            existingNarocilo.setCenaSkupaj(updatedNarocilo.getCenaSkupaj());\n        }\n        if (updatedNarocilo.getSeznamKolicin() != null) {\n            existingNarocilo.setSeznamKolicin(updatedNarocilo.getSeznamKolicin());\n        }\n        if (updatedNarocilo.getZaposlen() != null) {\n            existingNarocilo.setZaposlen(updatedNarocilo.getZaposlen());\n        }\n        if (updatedNarocilo.getArtikli() != null) {\n            existingNarocilo.setArtikli(updatedNarocilo.getArtikli());\n        }\n        if (updatedNarocilo.getDatumVnosa() != null) {\n            existingNarocilo.setDatumVnosa(updatedNarocilo.getDatumVnosa());\n        }\n        if (updatedNarocilo.getRokPriprave() != null) {\n            existingNarocilo.setRokPriprave(updatedNarocilo.getRokPriprave());\n        }\n        if (updatedNarocilo.getCasPriprave() != null) {\n            existingNarocilo.setCasPriprave(updatedNarocilo.getCasPriprave());\n        }\n        if (updatedNarocilo.getStanjeNarocila() != null) {\n            existingNarocilo.setStanjeNarocila(updatedNarocilo.getStanjeNarocila());\n        }\n\n        narociloDao.save(existingNarocilo);\n\n        return ResponseEntity.ok(\"Naročilo uspešno posodobljeno.\");\n    }\n\n    @PutMapping(\"/posodobi/stanje/{ID_narocilo}\")\n    public ResponseEntity<String> posodobiStanjeNarocila(@PathVariable(name = \"ID_narocilo\") Long ID_narocilo, @RequestBody Narocilo updatedNarocilo) {\n        Narocilo existingNarocilo = narociloDao.vrniDolocenoNarocilo(ID_narocilo);\n\n        if (existingNarocilo == null) {\n            return ResponseEntity.notFound().build();\n        }\n\n        if (updatedNarocilo.getStanjeNarocila() != null) {\n            existingNarocilo.setStanjeNarocila(updatedNarocilo.getStanjeNarocila());\n        }\n        if (updatedNarocilo.getCasPriprave() != null) {\n            existingNarocilo.setCasPriprave(updatedNarocilo.getCasPriprave());\n        }\n\n        narociloDao.save(existingNarocilo);\n\n        return ResponseEntity.ok(\"Stanje naročila uspešno posodobljeno.\");\n    }\n\n\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/si/feri/um/wha/controllers/NarociloController.java b/src/main/java/si/feri/um/wha/controllers/NarociloController.java
--- a/src/main/java/si/feri/um/wha/controllers/NarociloController.java	(revision 5181cef4ea420769ffd40267b469e3928310876c)
+++ b/src/main/java/si/feri/um/wha/controllers/NarociloController.java	(date 1706106986687)
@@ -18,6 +18,7 @@
 
 import java.util.ArrayList;
 import java.util.List;
+import java.util.stream.StreamSupport;
 
 @RestController
 @CrossOrigin
@@ -42,6 +43,18 @@
         return narociloDao.vrniDolocenoNarocilo(ID_narocilo);
     }
 
+    @GetMapping("/zasluzek")
+    public ResponseEntity<Double> getZasluzekSkupaj() {
+
+        Iterable<Narocilo> allOrders = narociloDao.findAll();
+
+        double total = StreamSupport.stream(allOrders.spliterator(), false)
+                .mapToDouble(Narocilo::getCenaSkupaj)
+                .sum();
+
+        return ResponseEntity.ok(total);
+    }
+
 
     @GetMapping("/st_teden1")
     public ResponseEntity<Map<String, Integer>> getNumberOfOrdersForFirstWeek() {
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"bd434cf2-e57e-4cbb-ae2e-d810ebb65cf4\" name=\"Changes\" comment=\"Enum stanje narocila\" />\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Enum\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\n      <map>\n        <entry key=\"$PROJECT_DIR$/..\" value=\"narocilaPrip\" />\n      </map>\n    </option>\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$/..\" />\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"MavenImportPreferences\">\n    <option name=\"generalSettings\">\n      <MavenGeneralSettings>\n        <option name=\"mavenHome\" value=\"Use Maven wrapper\" />\n        <option name=\"useMavenConfig\" value=\"true\" />\n      </MavenGeneralSettings>\n    </option>\n    <option name=\"importingSettings\">\n      <MavenImportingSettings>\n        <option name=\"workspaceImportEnabled\" value=\"true\" />\n      </MavenImportingSettings>\n    </option>\n  </component>\n  <component name=\"ProjectId\" id=\"2ZiZ8wCZQrmdu8TuCBzQt7U2bJe\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;last_opened_file_path&quot;: &quot;/Users/rokfonovic/Desktop/Sola/2_LETNIK/RIS/Projekt/WHA/wha&quot;,\n    &quot;settings.editor.selected.configurable&quot;: &quot;org.jetbrains.plugins.github.ui.GithubSettingsConfigurable&quot;\n  }\n}</component>\n  <component name=\"RunManager\">\n    <configuration name=\"WHA\" type=\"Application\" factoryName=\"Application\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"si.feri.um.wha.WhaApplication\" />\n      <module name=\"wha\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"bd434cf2-e57e-4cbb-ae2e-d810ebb65cf4\" name=\"Changes\" comment=\"\" />\n      <created>1702906705240</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1702906705240</updated>\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"Znova ustvarjen git projekt\">\n      <created>1702906803638</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1702906803638</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"Enum stanje narocila\">\n      <created>1704285265764</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1704285265764</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"Enum stanje narocila\">\n      <created>1704285273302</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1704285273302</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"4\" />\n    <servers />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"Znova ustvarjen git projekt\" />\n    <MESSAGE value=\"Enum stanje narocila\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Enum stanje narocila\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 5181cef4ea420769ffd40267b469e3928310876c)
+++ b/.idea/workspace.xml	(date 1706115984579)
@@ -4,7 +4,11 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="bd434cf2-e57e-4cbb-ae2e-d810ebb65cf4" name="Changes" comment="Enum stanje narocila" />
+    <list default="true" id="bd434cf2-e57e-4cbb-ae2e-d810ebb65cf4" name="Changes" comment="Enum stanje narocila">
+      <change beforePath="$PROJECT_DIR$/../Frontend/frontend/src/pages/dashboard/index.js" beforeDir="false" afterPath="$PROJECT_DIR$/../Frontend/frontend/src/pages/dashboard/index.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/si/feri/um/wha/controllers/NarociloController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/si/feri/um/wha/controllers/NarociloController.java" afterDir="false" />
+    </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
